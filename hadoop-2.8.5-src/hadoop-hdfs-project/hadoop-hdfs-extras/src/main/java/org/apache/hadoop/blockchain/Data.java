package org.apache.hadoop.blockchain;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class Data extends Contract {
    public static final String BINARY = "0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060018054600160a060020a031916600160a060020a039290921691909117905561006c565b61118780610b6683390190565b610aeb8061007b6000396000f3fe608060405234801561001057600080fd5b5060043610610068577c010000000000000000000000000000000000000000000000000000000060003504632199c19a811461006d5780635c5f818a14610082578063c099ecd5146100c7578063e113d7c914610142575b600080fd5b61008061007b3660046107c0565b61016a565b005b61008061009036600461079e565b6000918252602082815260408084203285526001019091529091207001000000000000000000000000000000009190910242179055565b61012c6100d5366004610785565b60008181526020818152604080832032808552600190910183529281902054815192830152818101939093526c01000000000000000000000000909102606082015281516054818303018152607490910190915290565b6040516101399190610914565b60405180910390f35b610080610150366004610899565b600092835260208381526040808520938552929052912055565b600083815260208181526040808320328085526001820184528285205483519485018190529284018890526c010000000000000000000000000260608401529290916fffffffffffffffffffffffffffffffff831691906101dd906074016040516020818303038152906040528761057c565b600087815260208690526040812054919250906101f990610644565b905060005b60018110156105275782816001811061021957610219610a83565b60200201518252610228610695565b60405180604001604052808984600861024191906109df565b8151811061025157610251610a83565b602002602001015181526020018984600861026c91906109df565b6102779060016109c7565b8151811061028757610287610a83565b602090810291909101015190528152604080516080810182529081908101808b6102b28760086109df565b6102bd9060026109c7565b815181106102cd576102cd610a83565b602002602001015181526020018b8660086102e891906109df565b6102f39060036109c7565b8151811061030357610303610a83565b6020026020010151815250815260200160405180604001604052808b86600861032c91906109df565b6103379060046109c7565b8151811061034757610347610a83565b602002602001015181526020018b86600861036291906109df565b61036d9060056109c7565b8151811061037d5761037d610a83565b602002602001015181525081525081602001819052506040518060400160405280898460086103ac91906109df565b6103b79060066109c7565b815181106103c7576103c7610a83565b60200260200101518152602001898460086103e291906109df565b6103ed9060076109c7565b815181106103fd576103fd610a83565b6020908102919091010151905260408083019190915260015490517f799afa7600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063799afa769061046a9084908790600401610947565b60206040518083038186803b15801561048257600080fd5b505afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba919061075c565b6105145760408051328152602081018790529081018a9052600160608201528a907f04534e26d4f9b557ad03dbbb13741f60740aadb9c7d7e894095eee2b643bd9529060800160405180910390a250505050505050505050565b508061051f81610a2a565b9150506101fe565b5060408051328152602081018590529081018890526000606082015288907f04534e26d4f9b557ad03dbbb13741f60740aadb9c7d7e894095eee2b643bd9529060800160405180910390a25050505050505050565b6105846106e6565b61058c6106e6565b600083856040516020016105a19291906108ee565b60408051601f19818403018152919052805160209091012090506105c86201000082610a45565b825260015b600181101561063a57604080516020810184905290810186905260600160408051601f19818403018152919052805160209091012091506106116201000083610a45565b83826001811061062357610623610a83565b60200201528061063281610a2a565b9150506105cd565b5090949350505050565b61064c610704565b610654610704565b600160608201526fffffffffffffffffffffffffffffffff838116604083015270010000000000000000000000000000000090930490921660208301525090565b6040805160a0810190915260006060820181815260808301919091528152602081016106bf610722565b81526020016106e1604051806040016040528060008152602001600081525090565b905290565b60405180602001604052806001906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806040016040528061073561073e565b81526020016106e15b60405180604001604052806002906020820280368337509192915050565b60006020828403121561076e57600080fd5b8151801515811461077e57600080fd5b9392505050565b60006020828403121561079757600080fd5b5035919050565b600080604083850312156107b157600080fd5b50508035926020909101359150565b6000806000606084860312156107d557600080fd5b833592506020808501359250604085013567ffffffffffffffff808211156107fc57600080fd5b818701915087601f83011261081057600080fd5b81358181111561082257610822610a9c565b838102604051601f19603f8301168101818110858211171561084657610846610a9c565b604052828152858101935084860182860187018c101561086557600080fd5b600095505b8386101561088857803585526001959095019493860193860161086a565b508096505050505050509250925092565b6000806000606084860312156108ae57600080fd5b505081359360208301359350604090920135919050565b8060005b60028110156108e85781518452602093840193909101906001016108c9565b50505050565b828152600082516109068160208501602087016109fe565b919091016020019392505050565b60208152600082518060208401526109338160408501602087016109fe565b601f01601f19169190910160400192915050565b8251805182526020908101519082015261018081016020808501516109706040850182516108c5565b81015161098060808501826108c5565b506040850151805160c08501526020015160e084015261010083018460005b60048110156109bc5781518352918301919083019060010161099f565b505050509392505050565b600082198211156109da576109da610a6a565b500190565b60008160001904831182151516156109f9576109f9610a6a565b500290565b60005b83811015610a19578181015183820152602001610a01565b838111156108e85750506000910152565b6000600019821415610a3e57610a3e610a6a565b5060010190565b600082610a655760e060020a634e487b7102600052601260045260246000fd5b500690565b60e060020a634e487b7102600052601160045260246000fd5b60e060020a634e487b7102600052603260045260246000fd5b60e060020a634e487b7102600052604160045260246000fdfea264697066735822122025736a390f77409124ccb5b1035e852032d759f5fb6b90c17d0dd9b32511863164736f6c63430008060033608060405234801561001057600080fd5b50611167806100206000396000f3fe608060405234801561001057600080fd5b5060043610610047577c01000000000000000000000000000000000000000000000000000000006000350463799afa76811461004c575b600080fd5b61005f61005a366004610ef0565b610073565b604051901515815260200160405180910390f35b60408051600480825260a082019092526000918291906020820160808036833701905050905060005b60048110156100eb578381600481106100b7576100b76110ff565b60200201518282815181106100ce576100ce6110ff565b6020908102919091010152806100e3816110a6565b91505061009c565b506100f68185610110565b61010457600191505061010a565b60009150505b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018161013c610293565b9050806080015151855160016101529190611058565b1461015c57600080fd5b604080518082019091526000808252602082018190525b865181101561020a578387828151811061018f5761018f6110ff565b6020026020010151106101a157600080fd5b6101f6826101f185608001518460016101ba9190611058565b815181106101ca576101ca6110ff565b60200260200101518a85815181106101e4576101e46110ff565b6020026020010151610793565b6107f7565b915080610202816110a6565b915050610173565b50610233818360800151600081518110610226576102266110ff565b60200260200101516107f7565b90506102778560000151866020015161024b84610851565b856040015161025d8a60400151610851565b6060880151885161026d90610851565b89602001516108f0565b610287576001935050505061010a565b50600095945050505050565b61029b610d5b565b6040805180820182527f20001b2003bd2be00d95fbc45efc88fa129a44b36e30cf3e83349a5f97c6aa5f81527f1cb6d836ac27ada76a9167fcc1b58edf5945662d2254eebf372f153d00427c4c6020808301919091529083528151608080820184527f1399b1d4881c7f6afdae401dc30b052001d5b3ab4c953f6ab90d466ae1581a318285019081527f235e5f2573a7bf997a4ee5fd1a7921aa9144c7399867ca6d66c64287f7c147cf606080850191909152908352845180860186527f0bbea4db69478065154fbd5882d14d0b3cf9a6fb74fd2be1cfaba4fe6d68c7e981527f195514534d97942fdd092f2f134cfc97271c0b3668b9230f0f54198e2696831d818601528385015285840192909252835180820185527f2aae9e2b0c8961df501a131eaf373674abd3ceddc04642ee1a61bc076f2a010b8186019081527f22b47886ce82744098466b2c690ca67e81d17e3fb5ae2035b8489d5d5047b689828501528152845180860186527f0497a4da3121dcdfe31a76d2e1a72dca2a4b2a8f2ceda99643ee69b5cb31565c81527f271d54672f75f766d4513cc10f54a8dd8e49dcfec1801c5d45deaf096792f2f7818601528185015285850152835190810184527f291442decc0d35d8ccdd4888ce1bca5672c587d0b9f8277419bd25611859f84e8185019081527f28ea82a98f709db6e24ee9ddf57c210046cc1bc8e55c04799029ba439bcd7a65828401528152835180850185527f10ab743796ad6fc20fe9ae8112e5c124b45ca1c0cca00f8150c1418ffa2c1e8281527f16675863f3f450112ad756b93a209590497cad9a746f0bcb6f1d89168974304c8185015281840152908401528151600580825260c08201909352919082015b604080518082019091526000808252602082015281526020019060019003908161051657505060808201908152604080518082019091527f1fa51a2f5e7720210f10f80b10ef2c8e14c8b1b622746f2a85d99ec6856cc0d781527f06132885ea29065e81c31f1d5fe7e4f993174911df05855df16bf993e11d81f26020820152905180516000906105a9576105a96110ff565b602002602001018190525060405180604001604052807f178aa2f541065b0cce68246220f13b38667d73913b096be49dd37707699e72a781526020017f27086d5259fb86677f1802b99881644df642d72ae3c2cbbf4d18daff9ff83dd68152508160800151600181518110610620576106206110ff565b602002602001018190525060405180604001604052807f08484310e9531c46094b84661739e2f0ff34624799f7e0435cf0a69c1ca83b9081526020017f0a1c04b7d613e17cfe11ea465ab133003591a12bc332c4dda25c870ecd9826178152508160800151600281518110610697576106976110ff565b602002602001018190525060405180604001604052807f17b26bdcee46e6d57e374cd5aa6fb8085486a0cfa8d0b579178066339a954a4181526020017f20e842e4aa12878412467893e4283158b42409993d22cf4808325b9cd9ac8901815250816080015160038151811061070e5761070e6110ff565b602002602001018190525060405180604001604052807f2abc82c299da91af485f854f73686ef06c8a51088ccbeab849cbba2c16de14da81526020017f170a2d6d0bd0c74d483a0a6bf312e7fd494ab7c5e9533e080fd4e48006de575e8152508160800151600481518110610785576107856110ff565b602002602001018190525090565b60408051808201909152600080825260208201526107af610dac565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa90508080156107e2576107e4565bfe5b50806107ef57600080fd5b505092915050565b6040805180820190915260008082526020820152610813610dca565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa90508080156107e2576107e4565b604080518082019091526000808252602082015281517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479015801561089857506020830151155b156108b85750506040805180820190915260008082526020820152919050565b6040518060400160405280846000015181526020018285602001516108dd91906110c1565b6108e7908461108f565b90529392505050565b60408051600480825260a08201909252600091829190816020015b604080518082019091526000808252602082015281526020019060019003908161090b57505060408051600480825260a0820190925291925060009190602082015b610955610de8565b81526020019060019003908161094d5790505090508a8260008151811061097e5761097e6110ff565b6020026020010181905250888260018151811061099d5761099d6110ff565b602002602001018190525086826002815181106109bc576109bc6110ff565b602002602001018190525084826003815181106109db576109db6110ff565b602002602001018190525089816000815181106109fa576109fa6110ff565b60200260200101819052508781600181518110610a1957610a196110ff565b60200260200101819052508581600281518110610a3857610a386110ff565b60200260200101819052508381600381518110610a5757610a576110ff565b6020026020010181905250610a6c8282610a7b565b9b9a5050505050505050505050565b60008151835114610a8b57600080fd5b82516000610a9a826006611070565b905060008167ffffffffffffffff811115610ab757610ab7611118565b604051908082528060200260200182016040528015610ae0578160200160208202803683370190505b50905060005b83811015610d1b57868181518110610b0057610b006110ff565b60200260200101516000015182826006610b1a9190611070565b610b25906000611058565b81518110610b3557610b356110ff565b602002602001018181525050868181518110610b5357610b536110ff565b60200260200101516020015182826006610b6d9190611070565b610b78906001611058565b81518110610b8857610b886110ff565b602002602001018181525050858181518110610ba657610ba66110ff565b60209081029190910181015151015182610bc1836006611070565b610bcc906002611058565b81518110610bdc57610bdc6110ff565b602002602001018181525050858181518110610bfa57610bfa6110ff565b6020908102919091010151515182610c13836006611070565b610c1e906003611058565b81518110610c2e57610c2e6110ff565b602002602001018181525050858181518110610c4c57610c4c6110ff565b602002602001015160200151600160028110610c6a57610c6a6110ff565b602002015182610c7b836006611070565b610c86906004611058565b81518110610c9657610c966110ff565b602002602001018181525050858181518110610cb457610cb46110ff565b602002602001015160200151600060028110610cd257610cd26110ff565b602002015182610ce3836006611070565b610cee906005611058565b81518110610cfe57610cfe6110ff565b602090810291909101015280610d13816110a6565b915050610ae6565b50610d24610e0d565b6000602082602086026020860160086107d05a03fa90508080156107e2575080610d4d57600080fd5b505115159695505050505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101610d85610de8565b8152602001610d92610de8565b8152602001610d9f610de8565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280610dfb610e2b565b8152602001610e08610e2b565b905290565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b600082601f830112610e5a57600080fd5b610e62611012565b808385604086011115610e7457600080fd5b60005b6002811015610e96578135845260209384019390910190600101610e77565b509095945050505050565b600060408284031215610eb357600080fd5b6040516040810181811067ffffffffffffffff82111715610ed657610ed6611118565b604052823581526020928301359281019290925250919050565b60008082840361018080821215610f0657600080fd5b61010080831215610f1657600080fd5b610f1e610fe9565b610f288888610ea1565b81526080603f1985011215610f3c57600080fd5b610f44611012565b9350610f538860408901610e49565b8452610f628860808901610e49565b602081818701528581840152610f7b8a60c08b01610ea1565b60408401528297508961011f8a0112610f9357600080fd5b610f9b611035565b9550859250838901935089858a011115610fb457600080fd5b600094505b6004851015610fda5783358652948501946001949094019392830192610fb9565b50959890975095505050505050565b6040516060810167ffffffffffffffff8111828210171561100c5761100c611118565b60405290565b6040805190810167ffffffffffffffff8111828210171561100c5761100c611118565b6040516080810167ffffffffffffffff8111828210171561100c5761100c611118565b6000821982111561106b5761106b6110e6565b500190565b600081600019048311821515161561108a5761108a6110e6565b500290565b6000828210156110a1576110a16110e6565b500390565b60006000198214156110ba576110ba6110e6565b5060010190565b6000826110e15760e060020a634e487b7102600052601260045260246000fd5b500690565b60e060020a634e487b7102600052601160045260246000fd5b60e060020a634e487b7102600052603260045260246000fd5b60e060020a634e487b7102600052604160045260246000fdfea264697066735822122084dc2371d4774611c7f85c1f17aa265084dfe1ace5f9baaeef764a7dc60bfc3c64736f6c63430008060033";

    public static final String FUNC_ADD_DIGEST = "add_digest";

    public static final String FUNC_CREATE_SEED = "create_seed";

    public static final String FUNC_PEEK_SEED = "peek_seed";

    public static final String FUNC_VERIFY = "verify";

    public static final Event BLOCKREPORT_EVENT = new Event("BlockReport", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("1638985448610", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638983699119", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637080753645", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644869485066", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638982098498", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642764836974", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1641648730913", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642593869682", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1641930865917", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644692076956", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644691182277", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643121210674", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637672661338", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637673700435", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642862069724", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642508277568", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643297533380", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637333283032", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1641931307165", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643900240601", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637662576855", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642087631156", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638986767804", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642070849341", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644833092782", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("5777", "0x115B0d58E11CE1aC1f6c9C708C02AccB9B002A94");
        _addresses.put("1642950070276", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642673020306", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638465044270", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637332738022", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638461099038", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638462916441", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642093010283", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1641927617654", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644072831746", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643573328387", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644868149949", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643557831295", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644930374919", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643031659312", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638809439379", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637071457356", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644932871817", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644925176238", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638979793048", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637864095464", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637077693246", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644870322900", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638711375684", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637066550252", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644926052655", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638466925012", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638458430200", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644048257137", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637872037364", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644001321341", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644082660940", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644158990229", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642429907231", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644925004507", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644085602530", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643902948491", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638460160171", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643872891891", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1641224256046", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644931052385", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644836231856", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642087044534", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1641739926449", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638640533650", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637680705106", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637082516099", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637684453171", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1641302917758", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644867816100", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643807818837", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637676980054", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643189858205", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643876867147", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644927486937", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638984780847", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644518678898", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643723774051", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644871178800", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1637869809531", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643473735761", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644067479771", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1641823409544", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638712446602", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643373359320", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644689940298", "0x67B5656d60a809915323Bf2C40A8bEF15A152e3e");
        _addresses.put("1643720324460", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638719028019", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1644075008784", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1643560977038", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1642087567638", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
        _addresses.put("1638981433293", "0xCfEB869F69431e42cdB54A4F4f105C19C080A601");
    }

    @Deprecated
    protected Data(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Data(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Data(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Data(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<BlockReportEventResponse> getBlockReportEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(BLOCKREPORT_EVENT, transactionReceipt);
        ArrayList<BlockReportEventResponse> responses = new ArrayList<BlockReportEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            BlockReportEventResponse typedResponse = new BlockReportEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.blockpool = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.datanode = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.time = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.blockId = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.corrupt = (Boolean) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BlockReportEventResponse> blockReportEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, BlockReportEventResponse>() {
            @Override
            public BlockReportEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(BLOCKREPORT_EVENT, log);
                BlockReportEventResponse typedResponse = new BlockReportEventResponse();
                typedResponse.log = log;
                typedResponse.blockpool = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.datanode = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.time = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.blockId = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.corrupt = (Boolean) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BlockReportEventResponse> blockReportEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BLOCKREPORT_EVENT));
        return blockReportEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> add_digest(byte[] _bp_id, BigInteger _block_id, byte[] _root) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADD_DIGEST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_bp_id), 
                new org.web3j.abi.datatypes.generated.Uint256(_block_id), 
                new org.web3j.abi.datatypes.generated.Bytes32(_root)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> create_seed(byte[] _bp_id, BigInteger randomness) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATE_SEED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_bp_id), 
                new org.web3j.abi.datatypes.generated.Uint256(randomness)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<byte[]> peek_seed(byte[] _bp_id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PEEK_SEED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_bp_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> verify(byte[] _bp_id, BigInteger _block_id, List<BigInteger> numbers) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_VERIFY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_bp_id), 
                new org.web3j.abi.datatypes.generated.Uint256(_block_id), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.datatypes.generated.Uint256.class,
                        org.web3j.abi.Utils.typeMap(numbers, org.web3j.abi.datatypes.generated.Uint256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Data load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Data(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Data load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Data(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Data load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Data(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Data load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Data(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Data> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Data.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Data> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Data.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Data> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Data.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Data> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Data.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class BlockReportEventResponse extends BaseEventResponse {
        public byte[] blockpool;

        public String datanode;

        public BigInteger time;

        public BigInteger blockId;

        public Boolean corrupt;
    }
}
